Word,Count
+,62
TODO,39
\"\\,26
=,22
*,20
Auto-generated,20
stub,19
method,18
{,14
to,13
},13
\64,\,11
j,11
new,10
i,10
column,9
if,8
-,7
entity.addComponent(new,7
this,7
for,7
it,7
the,6
make,5
attack,5
<,5
optimize,5
3,5
\"\:"\\,5
\220,\,4
100,4
temp,4
\"\/"\\,4
\64),\,4
64,4
false));,4
sound,4
(int,4
\"\!"\);\,4
\SpriteComponent(entity,\,4
of,4
0;,4
x,4
\SpriteSheet("\res/images/player1.png"\,\,3
y);,3
/,3
from,3
public,3
add,3
component,3
\0,\,3
not,3
sound.play();,3
final,3
\destroyed"\);\,3
spells,3
on,3
static,3
fix,3
\System.out.println("\Moved\,3
health,3
using,2
are,2
this.rotation,2
(currentItem.hasComponent(Consts.MANABONUS)),2
defense,2
only,2
weapon,2
proper,2
1));,2
separate,2
9,2
:,2
ManaBonusComponent,2
know,2
entity1.addComponent(new,2
adapt,2
effect,2
4,2
zero,2
Sound,2
buff,2
map,2
Sound(currentSpell.getSoundPath());,2
facing,2
3;,2
currentItem.getComponent(Consts.HEALTHBONUS);,2
(HealthBonusComponent),2
change,2
System.out.println(currentSpell.toString());,2
width/height,2
actual,2
mana,2
and,2
manaBonus,2
strings,2
(ManaBonusComponent),2
minimap,2
MainGame.dt,2
(currentItem.hasComponent(Consts.HEALTHBONUS)),2
int,2
items,2
maxHealth,2
returning,2
2,2
currentItem.getComponent(Consts.MANABONUS);,2
private,2
image,2
healthBonus,2
5,2
whose,2
maxMana,2
as,2
enemies,2
getSpeed(),2
System.out.println(spell.toString(),2
Consts.SCREEN_HEIGHT,2
System.out.println(self.getName(),2
those,2
letting,2
1000f,2
j++),2
HealthBonusComponent,2
negation,2
that,2
a,2
accumulate,2
was,2
(Math.PI,2
bonuses,2
i++),2
\self.broadcast("\damage\,2
(float),2
+200,2
which,2
reserved,1
angle,1
\position.getX(),\,1
give,1
units,1
\arrived"\\,1
sorcerer,1
currentItem.getComponent(Consts.DEFENSE);,1
y,1
System.out.println(channel.getCommand());,1
Sound(currentSpell.getDeathSoundPath());,1
constructor,1
softcode,1
\CircularMovement(entity,\,1
killing,1
\attackcomp"\);\,1
circle,1
\3f,\,1
\self.broadcast("\move\,1
\alive!"\);\,1
commands,1
(and,1
sound;,1
System.out.println(bit);,1
be,1
8,1
appgc.setClearEachFrame(false);,1
\SpriteSheet(res/images/player1.png"\,\,1
sprite,1
(damage,1
angle;,1
(int),1
states,1
handle,1
\5,\,1
self.broadcast(healthBonus.negateBonus());,1
messages,1
show,1
self.broadcast(manaBonus.giveBonus());,1
\System.out.println("\Mana\,1
complex,1
?make,1
FULLSCREEN,1
should,1
when,1
inventory.add(EntityFactory.getReplenishingPotionBlueprint(1));,1
shield/orbs,1
\SummonComponent(entity1,\,1
blow,1
System.out.println(spell.getName(),1
Consts.TILE_SIZE);,1
\"\"\;\,1
ints,1
any,1
enums,1
aoe,1
death:,1
\CastComponent(entity,\,1
0.3),1
default,1
Consts.TILE_SIZE,1
slow,1
coords,1
newlines,1
angle)));,1
based,1
value,1
\GuideComponent(entity1,\,1
over,1
\Image(map[i][j].getImagePath()),\,1
lists,1
sheets,1
\j,\,1
mouseY);,1
stats),1
spells));,1
(currentItem.hasComponent(Consts.DEFENSE)),1
environment,1
pass,1
this.x,1
\self.broadcast("\heal\,1
hovering,1
(DefenseComponent),1
button,1
catch,1
+command);,1
name,1
LocalTime.now());,1
get,1
\System.out.println("\I'm\,1
\System.out.println("\Replenished\,1
self.broadcast(manaBonus.negateBonus());,1
\200,\,1
};,1
bit,1
map.length;,1
screen,1
entity,1
sounds[1],1
6,1
SCREEN_WIDTH,1
\self.broadcast("\draw\,1
actions,1
offsetting,1
\System.out.println("\Burned\,1
System.out.println(LocalTime.now(),1
Sound[2];,1
equipped,1
but,1
enemyEnts.add(EntityFactory.getEnemyBlueprint1(Consts.SCREEN_WIDTH,1
after,1
summoner,1
well,1
\(str.matches("\listen"\))\,1
encode,1
Map,1
(AttackComponent),1
64);,1
player,1
else,1
boolean,1
\5.5f,\,1
\right"\);\,1
inventory.add(EntityFactory.getHealingPotionBlueprint(2));,1
stats,1
position.getY());,1
block,1
Math.random(),1
7,1
\System.out.println("\Damaged\,1
them,1
self.broadcast(healthBonus.giveBonus());,1
SpellType.MultiBouncer,1
\System.out.println("\Healed\,1
g.drawImage(new,1
debuffs,1
System.out.println(mouseX,1
\Walk"\);\,1
//,1
\square,\,1
too,1
inventory.add(EntityFactory.getCherryBlueprint(1));,1
?optimize,1
exception,1
map[i].length;,1
System.out.println(Keyboard.getEventKey());,1
damage);,1
SpellType[],1
update,1
DefenseComponent,1
sounds[],1
self.broadcast(defense.giveBonus());,1
this.y,1
with,1
Sound(SpellType.valueOf(spell.getName()).getDeathSoundPath());,1
before,1
self.broadcast(attack.giveBonus());,1
true;,1
this.scale);,1
in,1
bonus,1
manaOnDeath);,1
1,1
loop,1
SCREEN_HEIGHT,1
primary,1
by,1
enemyEnts.add(EntityFactory.getEnemyBlueprint2(Consts.SCREEN_WIDTH,1
components,1
disabler,1
curses,1
200));,1
where,1
(Math.random(),1
render,1
rotation,1
previous,1
\ManaComponent(entity,\,1
might,1
base,1
move,1
all,1
appgc.setUpdateOnlyWhenVisible(false);,1
System.out.println(delta);,1
unequipped,1
\i,\,1
currentItem.getComponent(Consts.ATTACK);,1
spawn,1
accept,1
16,1
(currentItem.hasComponent(Consts.ATTACK)),1
0,1
20)));,1
spell,1
protector,1
keep,1
more,1
command,1
buffs,1
100));,1
sounds[0],1
\self.broadcast("\animate\,1
is,1
summons,1
\"\updating\,1
follow,1
Sound(spell.getCurrentSpell().getSoundPath());,1
\left"\);\,1
AttackComponent,1
System.out.println(name,1
camera,1
\System.out.println("\health\,1
System.out.println(commands);,1
1366;,1
use,1
0.2));,1
classes,1
lifesteal,1
768;,1
((SpriteComponent)self.getComponent(Consts.SPRITE)).animateWalk();,1
kill,1
\g.drawImage(image,\,1
until,1
healing);,1
update();,1
Minimap,1
TODO:,1
